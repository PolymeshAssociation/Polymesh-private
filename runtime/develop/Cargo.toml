[package]
name = "polymesh-private-runtime-develop"
version = "2.0.1"
authors = ["PolymeshAssociation"]
edition = "2021"
build = "build.rs"

[dependencies]
# Common
polymesh-common-utilities = { workspace = true, default-features = false }
polymesh-runtime-common = { workspace = true, default-features = false }
polymesh-primitives = { workspace = true, default-features = false }
polymesh-weights = { workspace = true, default-features = false }
polymesh-extensions = { workspace = true, default-features = false }

# Our pallets
pallet-asset = { workspace = true, default-features = false }
pallet-balances = { workspace = true, default-features = false }
pallet-base = { workspace = true, default-features = false }
pallet-committee = { workspace = true, default-features = false }
pallet-compliance-manager = { workspace = true, default-features = false }
pallet-confidential-asset = { workspace = true, default-features = false }
pallet-corporate-actions = { workspace = true, default-features = false }
pallet-external-agents = { workspace = true, default-features = false }
pallet-group = { workspace = true, default-features = false }
pallet-identity = { workspace = true, default-features = false }
pallet-multisig = { workspace = true, default-features = false }
pallet-nft = { workspace = true, default-features = false }
pallet-permissions = { workspace = true, default-features = false }
pallet-pips = { workspace = true, default-features = false }
pallet-portfolio = { workspace = true, default-features = false }
pallet-protocol-fee = { workspace = true, default-features = false }
pallet-relayer = { workspace = true, default-features = false }
pallet-sto = { workspace = true, default-features = false }
pallet-settlement = { workspace = true, default-features = false }
pallet-statistics = { workspace = true, default-features = false }
pallet-test-utils = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
pallet-treasury = { workspace = true, default-features = false }
pallet-utility = { workspace = true, default-features = false }
pallet-sudo = { workspace = true, default-features = false }
polymesh-contracts = { workspace = true, default-features = false }

# Others
log = "0.4.8"

# Substrate
codec = { workspace = true, package = "parity-scale-codec", default-features = false, features = ["derive"] }
scale-info = { workspace = true, default-features = false, features = ["derive"] }
sp-core = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-version = { workspace = true, default-features = false }
sp-api = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-offchain = { workspace = true, default-features = false }
sp-consensus-babe = { workspace = true, default-features = false }
sp-consensus-grandpa = { workspace = true, default-features = false }
sp-session = { workspace = true, default-features = false }
sp-authority-discovery = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sp-arithmetic = { workspace = true, default-features = false }
#
pallet-authorship = { workspace = true, default-features = false }
pallet-contracts = { workspace = true, default-features = false }
pallet-contracts-primitives = { workspace = true, default-features = false }
pallet-executive = { workspace = true, default-features = false }
pallet-grandpa = { workspace = true, default-features = false }
pallet-im-online = { workspace = true, default-features = false }
pallet-indices = { workspace = true, default-features = false }
pallet-offences = { workspace = true, default-features = false }
pallet-preimage = { workspace = true, default-features = false }
pallet-session = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-babe = { workspace = true, default-features = false }
pallet-authority-discovery = { workspace = true, default-features = false }
pallet-insecure-randomness-collective-flip = { workspace = true, default-features = false }
pallet-scheduler = { workspace = true, default-features = false }

# PoA
validator-set = { workspace = true, default-features = false }

frame-system = { workspace = true, default-features = false }
frame-support = { workspace = true, default-features = false }

# RPC
frame-system-rpc-runtime-api = { workspace = true, default-features = false }
pallet-group-rpc-runtime-api = { workspace = true, default-features = false }
pallet-protocol-fee-rpc-runtime-api = { workspace = true, default-features = false }
node-rpc-runtime-api = { workspace = true, default-features = false }

# Used for runtime benchmarking
frame-benchmarking = { version = "4.0.0-dev", default-features = false, optional = true }
frame-system-benchmarking = { version = "4.0.0-dev", default-features = false, optional = true }
hex-literal = { version = "0.3.1", optional = true }

# Import 'getrandom' here to enable feature `getrandom/js` for wasm builds.
getrandom = { version = "0.2.6", default-features = false, optional = true }

[build-dependencies]
polymesh-build-tool = { workspace = true, default-features = false }

[features]
default = ["std", "equalize", "u64_backend"]
equalize = []

ci-runtime = []

# Backends
u64_backend = [
	"polymesh-primitives/u64_backend",
	"pallet-confidential-asset/u64_backend",
]
simd_backend = [
	#"polymesh-primitives/simd_backend",
	"pallet-confidential-asset/simd_backend",
]
avx2_backend = [
	#"polymesh-primitives/avx2_backend",
	"pallet-confidential-asset/avx2_backend",
]

no_std = [
    "polymesh-primitives/no_std",
    "u64_backend"
]

std = [
  "polymesh-build-tool/std",
  "codec/std",
  "frame-benchmarking?/std",
  "frame-support/std",
  "frame-system-rpc-runtime-api/std",
  "frame-system-benchmarking?/std",
  "frame-system/std",
  "node-rpc-runtime-api/std",
  "pallet-asset/std",
  "pallet-authority-discovery/std",
  "pallet-authorship/std",
  "pallet-base/std",
  "pallet-babe/std",
  "pallet-balances/std",
  "pallet-sto/std",
  "pallet-committee/std",
  "pallet-compliance-manager/std",
  "pallet-confidential-asset/std",
  "pallet-contracts/std",
  "pallet-corporate-actions/std",
  "pallet-executive/std",
  "pallet-external-agents/std",
  "pallet-grandpa/std",
  "pallet-group-rpc-runtime-api/std",
  "pallet-group/std",
  "pallet-identity/std",
  "pallet-im-online/std",
  "pallet-indices/std",
  "pallet-multisig/std",
  "pallet-nft/std",
  "pallet-offences/std",
  "pallet-permissions/std",
  "pallet-preimage/std",
  "pallet-pips/std",
  "pallet-portfolio/std",
  "pallet-protocol-fee-rpc-runtime-api/std",
  "pallet-protocol-fee/std",
  "pallet-relayer/std",
  "pallet-insecure-randomness-collective-flip/std",
  "pallet-scheduler/std",
  "pallet-session/std",
  "validator-set/std",
  "pallet-settlement/std",
  "pallet-statistics/std",
  "pallet-sudo/std",
  "pallet-test-utils/std",
  "pallet-timestamp/std",
  "pallet-transaction-payment/std",
  "pallet-treasury/std",
  "pallet-utility/std",
  "polymesh-common-utilities/std",
  "polymesh-primitives/std",
  "polymesh-runtime-common/std",
  "polymesh-weights/std",
  "sp-api/std",
  "sp-arithmetic/std",
  "sp-authority-discovery/std",
  "sp-block-builder/std",
  "sp-consensus-babe/std",
  "sp-consensus-grandpa/std",
  "sp-core/std",
  "sp-inherents/std",
  "sp-io/std",
  "sp-offchain/std",
  "sp-runtime/std",
  "sp-session/std",
  "sp-std/std",
  "sp-transaction-pool/std",
  "sp-version/std",
  "polymesh-contracts/std",
  "polymesh-extensions/std",
]
runtime-benchmarks = [
  "getrandom/js",
  "frame-benchmarking/runtime-benchmarks",
  "frame-support/runtime-benchmarks",
  "frame-system-benchmarking/runtime-benchmarks",
  "frame-system/runtime-benchmarks",
  "pallet-babe/runtime-benchmarks",
  "pallet-indices/runtime-benchmarks",
  "pallet-grandpa/runtime-benchmarks",
  "pallet-preimage/runtime-benchmarks",
  "pallet-scheduler/runtime-benchmarks",
  "hex-literal",
  "pallet-asset/runtime-benchmarks",
  "pallet-balances/runtime-benchmarks",
  "pallet-committee/runtime-benchmarks",
  "pallet-compliance-manager/runtime-benchmarks",
  "pallet-confidential-asset/runtime-benchmarks",
  "pallet-contracts/runtime-benchmarks",
  "pallet-corporate-actions/runtime-benchmarks",
  "pallet-external-agents/runtime-benchmarks",
  "pallet-group/runtime-benchmarks",
  "pallet-identity/runtime-benchmarks",
  "pallet-multisig/runtime-benchmarks",
  "pallet-im-online/runtime-benchmarks",
  "pallet-permissions/runtime-benchmarks",
  "pallet-pips/runtime-benchmarks",
  "pallet-portfolio/runtime-benchmarks",
  "pallet-protocol-fee/runtime-benchmarks",
  "pallet-relayer/runtime-benchmarks",
  "pallet-settlement/runtime-benchmarks",
  "pallet-sto/runtime-benchmarks",
  "pallet-statistics/runtime-benchmarks",
  "pallet-timestamp/runtime-benchmarks",
  "pallet-treasury/runtime-benchmarks",
  "pallet-utility/runtime-benchmarks",
  "pallet-test-utils/runtime-benchmarks",
  "polymesh-common-utilities/runtime-benchmarks",
  "polymesh-contracts/runtime-benchmarks",
  "polymesh-primitives/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
  "pallet-nft/runtime-benchmarks"
]
running-ci = [
  "pallet-statistics/running-ci",
  "pallet-pips/running-ci",
  "pallet-identity/running-ci",
  "pallet-test-utils/running-ci",
]
