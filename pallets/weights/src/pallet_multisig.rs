// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_multisig
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-25, STEPS: `100`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 512
//! HOSTNAME: `Ubuntu-2204-jammy-amd64-base`, CPU: `AMD Ryzen 9 7950X3D 16-Core Processor`

// Executed Command:
// ./target/release/polymesh-private
// benchmark
// pallet
// -s
// 100
// -r
// 5
// -p=pallet_multisig
// -e=*
// --heap-pages
// 4096
// --db-cache
// 512
// --execution
// wasm
// --wasm-execution
// compiled
// --output
// ./pallets/weights/src/
// --template
// ./.maintain/frame-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use polymesh_runtime_common::{RocksDbWeight as DbWeight, Weight};

/// Weights for pallet_multisig using the Substrate node and recommended hardware.
pub struct SubstrateWeight;
impl pallet_multisig::WeightInfo for SubstrateWeight {
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigNonce (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigNonce (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity MultiPurposeNonce (r:1 w:1)
    // Proof Skipped: Identity MultiPurposeNonce (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:256)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:0 w:256)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:0 w:1)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:0 w:1)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[1, 256]`.
    fn create_multisig(i: u32) -> Weight {
        // Minimum execution time: 36_298 nanoseconds.
        Weight::from_ref_time(35_183_572)
            // Standard Error: 25_804
            .saturating_add(Weight::from_ref_time(8_583_466).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(4))
            .saturating_add(DbWeight::get().writes(4))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalIds (r:1 w:1)
    // Proof Skipped: MultiSig ProposalIds (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigTxDone (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Proof: Scheduler Agenda (max_values: None, max_size: Some(10463), added: 12938, mode: MaxEncodedLen)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:0 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    fn create_or_approve_proposal_as_identity() -> Weight {
        // Minimum execution time: 72_145 nanoseconds.
        Weight::from_ref_time(72_736_000)
            .saturating_add(DbWeight::get().reads(10))
            .saturating_add(DbWeight::get().writes(7))
    }
    // Storage: MultiSig ProposalIds (r:1 w:1)
    // Proof Skipped: MultiSig ProposalIds (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigTxDone (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Proof: Scheduler Agenda (max_values: None, max_size: Some(10463), added: 12938, mode: MaxEncodedLen)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:0 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    fn create_or_approve_proposal_as_key() -> Weight {
        // Minimum execution time: 73_267 nanoseconds.
        Weight::from_ref_time(74_751_000)
            .saturating_add(DbWeight::get().reads(11))
            .saturating_add(DbWeight::get().writes(7))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigTxDone (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Proof: Scheduler Agenda (max_values: None, max_size: Some(10463), added: 12938, mode: MaxEncodedLen)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:0 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    fn create_proposal_as_identity() -> Weight {
        // Minimum execution time: 68_398 nanoseconds.
        Weight::from_ref_time(69_220_000)
            .saturating_add(DbWeight::get().reads(9))
            .saturating_add(DbWeight::get().writes(6))
    }
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigTxDone (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Proof: Scheduler Agenda (max_values: None, max_size: Some(10463), added: 12938, mode: MaxEncodedLen)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:0 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    fn create_proposal_as_key() -> Weight {
        // Minimum execution time: 71_415 nanoseconds.
        Weight::from_ref_time(72_175_000)
            .saturating_add(DbWeight::get().reads(10))
            .saturating_add(DbWeight::get().writes(6))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Proof: Scheduler Agenda (max_values: None, max_size: Some(10463), added: 12938, mode: MaxEncodedLen)
    fn approve_as_identity() -> Weight {
        // Minimum execution time: 59_451 nanoseconds.
        Weight::from_ref_time(60_203_000)
            .saturating_add(DbWeight::get().reads(9))
            .saturating_add(DbWeight::get().writes(4))
    }
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Proof: Scheduler Agenda (max_values: None, max_size: Some(10463), added: 12938, mode: MaxEncodedLen)
    fn approve_as_key() -> Weight {
        // Minimum execution time: 53_270 nanoseconds.
        Weight::from_ref_time(54_482_000)
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().writes(4))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    fn reject_as_identity() -> Weight {
        // Minimum execution time: 44_093 nanoseconds.
        Weight::from_ref_time(44_724_000)
            .saturating_add(DbWeight::get().reads(7))
            .saturating_add(DbWeight::get().writes(2))
    }
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    fn reject_as_key() -> Weight {
        // Minimum execution time: 37_841 nanoseconds.
        Weight::from_ref_time(38_833_000)
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().writes(2))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:1 w:1)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    fn accept_multisig_signer_as_identity() -> Weight {
        // Minimum execution time: 126_016 nanoseconds.
        Weight::from_ref_time(139_000_000)
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().writes(4))
    }
    // Storage: Identity Authorizations (r:1 w:1)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:1)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    fn accept_multisig_signer_as_key() -> Weight {
        // Minimum execution time: 46_337 nanoseconds.
        Weight::from_ref_time(47_008_000)
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().writes(5))
    }
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity MultiPurposeNonce (r:1 w:1)
    // Proof Skipped: Identity MultiPurposeNonce (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:0 w:1)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    fn add_multisig_signer() -> Weight {
        // Minimum execution time: 27_101 nanoseconds.
        Weight::from_ref_time(27_852_000)
            .saturating_add(DbWeight::get().reads(2))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    fn remove_multisig_signer() -> Weight {
        // Minimum execution time: 32_662 nanoseconds.
        Weight::from_ref_time(32_782_000)
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().writes(2))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidRecords (r:1 w:0)
    // Proof Skipped: Identity DidRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig LostCreatorPrivileges (r:1 w:0)
    // Proof Skipped: MultiSig LostCreatorPrivileges (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity MultiPurposeNonce (r:1 w:1)
    // Proof Skipped: Identity MultiPurposeNonce (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:256)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:0 w:256)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[1, 256]`.
    fn add_multisig_signers_via_creator(i: u32) -> Weight {
        // Minimum execution time: 39_014 nanoseconds.
        Weight::from_ref_time(4_002_829)
            // Standard Error: 56_896
            .saturating_add(Weight::from_ref_time(12_171_165).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().writes(1))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:257 w:256)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidRecords (r:1 w:0)
    // Proof Skipped: Identity DidRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig LostCreatorPrivileges (r:1 w:0)
    // Proof Skipped: MultiSig LostCreatorPrivileges (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:256 w:256)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[1, 256]`.
    fn remove_multisig_signers_via_creator(i: u32) -> Weight {
        // Minimum execution time: 51_938 nanoseconds.
        Weight::from_ref_time(34_313_840)
            // Standard Error: 38_913
            .saturating_add(Weight::from_ref_time(13_113_846).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().reads((2_u64).saturating_mul(i.into())))
            .saturating_add(DbWeight::get().writes(1))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:0 w:1)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    fn change_sigs_required() -> Weight {
        // Minimum execution time: 22_292 nanoseconds.
        Weight::from_ref_time(44_384_000)
            .saturating_add(DbWeight::get().reads(4))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:2 w:1)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidKeys (r:0 w:1)
    // Proof Skipped: Identity DidKeys (max_values: None, max_size: None, mode: Measured)
    fn make_multisig_secondary() -> Weight {
        // Minimum execution time: 55_945 nanoseconds.
        Weight::from_ref_time(56_696_000)
            .saturating_add(DbWeight::get().reads(3))
            .saturating_add(DbWeight::get().writes(2))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:2 w:2)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:2 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidRecords (r:1 w:1)
    // Proof Skipped: Identity DidRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity AccountKeyRefCount (r:1 w:0)
    // Proof Skipped: Identity AccountKeyRefCount (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity DidKeys (r:0 w:2)
    // Proof Skipped: Identity DidKeys (max_values: None, max_size: None, mode: Measured)
    fn make_multisig_primary() -> Weight {
        // Minimum execution time: 48_772 nanoseconds.
        Weight::from_ref_time(49_373_000)
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().writes(5))
    }
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Proof Skipped: Instance2Group ActiveMembers (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity Claims (r:2 w:0)
    // Proof Skipped: Identity Claims (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidRecords (r:1 w:0)
    // Proof Skipped: Identity DidRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:1)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:1)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Proof Skipped: MultiSig ProposalDetail (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:0 w:1)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity CurrentPayer (r:0 w:1)
    // Proof Skipped: Identity CurrentPayer (max_values: Some(1), max_size: None, mode: Measured)
    fn execute_scheduled_proposal() -> Weight {
        // Minimum execution time: 51_597 nanoseconds.
        Weight::from_ref_time(52_419_000)
            .saturating_add(DbWeight::get().reads(9))
            .saturating_add(DbWeight::get().writes(5))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidRecords (r:1 w:0)
    // Proof Skipped: Identity DidRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig LostCreatorPrivileges (r:1 w:0)
    // Proof Skipped: MultiSig LostCreatorPrivileges (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:0 w:1)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    fn change_sigs_required_via_creator() -> Weight {
        // Minimum execution time: 35_998 nanoseconds.
        Weight::from_ref_time(36_699_000)
            .saturating_add(DbWeight::get().reads(7))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigToIdentity (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidRecords (r:1 w:0)
    // Proof Skipped: Identity DidRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig LostCreatorPrivileges (r:0 w:1)
    // Proof Skipped: MultiSig LostCreatorPrivileges (max_values: None, max_size: None, mode: Measured)
    fn remove_creator_controls() -> Weight {
        // Minimum execution time: 22_383 nanoseconds.
        Weight::from_ref_time(22_683_000)
            .saturating_add(DbWeight::get().reads(4))
            .saturating_add(DbWeight::get().writes(1))
    }
}
